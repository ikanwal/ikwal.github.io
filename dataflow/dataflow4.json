{
	"name": "dataflow4",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DelimitedText5",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"dataset": {
						"referenceName": "DelimitedText6",
						"type": "DatasetReference"
					},
					"name": "source2"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "AzureSqlTable",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "Join1"
				},
				{
					"name": "DerivedColumn1"
				},
				{
					"name": "Select1"
				}
			],
			"script": "source(output(\n\t\tCuenta_Accounts as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> source1\nsource(output(\n\t\tCuenta_Valores as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> source2\nsource1, source2 join(Cuenta_Accounts == Cuenta_Valores,\n\tjoinType:'outer',\n\tbroadcast: 'auto')~> Join1\nJoin1 derive(newdata = iif(Cuenta_Accounts == Cuenta_Valores,1,0)) ~> DerivedColumn1\nDerivedColumn1 select(mapColumn(\n\t\tCuenta_Accounts,\n\t\tCuenta_Valores,\n\t\tnewdata\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 sink(input(\n\t\tDate as timestamp,\n\t\taddress as string,\n\t\tDistrict as long,\n\t\tbeat as string,\n\t\tgrid as long,\n\t\tcrimedesr as string,\n\t\tcode as long\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\terrorHandlingOption: 'stopOnFirstError') ~> sink1"
		}
	}
}